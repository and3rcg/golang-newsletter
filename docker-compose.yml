services:
  # courtesy of gemini
  redis:
    image: redis:latest
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}  # Gets the password from the .env file
    volumes:
      - redis-data:/data  # Persistent data volume
    ports:
      - "6379:6379"  # Map port 6379
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "-p", "6379", "ping"]
      interval: 10s  # Check every 10 seconds
      timeout: 5s  # Timeout after 5 seconds
      retries: 3  # Retry 3 times before considering unhealthy
    depends_on:
      - db

  # courtesy of gemini
  db:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}  # Replace with your desired password
      MYSQL_DATABASE: ${MYSQL_DATABASE}  # Optional: Specify the default database name
      MYSQL_USER: ${MYSQL_USER}  # Optional: Specify a user with limited privileges
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}  # Optional: Password for the specified user
    volumes:
      - mysql-data:/var/lib/mysql  # Persistent data volume
    ports:
      - "3306:3306"  # Map container port 3306 to host port 3306
    expose:
      - 3306

  web:
    build:
      context: .
      dockerfile: Dockerfile_web
    ports:
      - 3000:3000
    # Important to bind/mount your codebase dir to /app dir for live reload
    volumes:
      - ./:/app
    depends_on:
      - redis

  worker:
    build:
      context: .
      dockerfile: Dockerfile_worker
    # ports:
    #   - 3001:3001
    volumes:
      - ./:/app
    depends_on:
      - web

volumes:
  redis-data:
  mysql-data:
